import ddf.minim.*;
import ddf.minim.analysis.*;
import ddf.minim.effects.*;
import ddf.minim.signals.*;
import ddf.minim.spi.*;
import ddf.minim.ugens.*;

PGraphics pg;
float smoothedSample;

Minim minim;
AudioPlayer player;
AudioBuffer buffer;

float lerpedAverage = 0;

float[] lerpedBuffer;

void setup() {
  size(640, 360);
  background(0);
  colorMode(HSB);
  pg = createGraphics(width, height);

  minim  = new Minim(this);
  player = minim.loadFile("cocaine jesuse.mp3", width); 
  player.play ();
  buffer = player.mix;
  lerpedBuffer = new float[buffer.size()];
}

void draw() {

  for (int i = 0; i < buffer.size(); i ++) 
  {
    float c = map(i, 0, buffer.size(), 0, 255); 
    stroke(c, 255, 255);
  float sample = buffer.get(i) * (height / 2);  // buffer[i]
    smoothedSample = lerp(smoothedSample, sample, 0.1);
    if (mousePressed == true) {
      line(mouseX - sample, mouseY, pmouseX + smoothedSample, pmouseY);
    }
    drawNow ()
  }
}

void mouseReleased()
{
  background(0); 
  {
    pg.beginDraw(); 
    pg.clear();
    pg.endDraw();
  }
  void drawNow ()
{
  for (int i = 0; i < buffer.size(); i ++) 
  {
    fill(255);
    PFont f = createFont("georgia", 50);
    String s = "DRAW NOW";
    textSize(30);
    textFont(f);
    float c = map(i, 0, buffer.size(), 0, 255); 
    stroke(c, 255, 255);
    fill(c, 255, 255);
    float sample = buffer.get(i) * (height / 2);
    text(s, width/2 / sample, height/2);
  }
}

}
